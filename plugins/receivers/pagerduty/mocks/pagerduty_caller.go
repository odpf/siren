// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	pagerduty "github.com/odpf/siren/plugins/receivers/pagerduty"
	mock "github.com/stretchr/testify/mock"
)

// PagerDutyCaller is an autogenerated mock type for the PagerDutyCaller type
type PagerDutyCaller struct {
	mock.Mock
}

type PagerDutyCaller_Expecter struct {
	mock *mock.Mock
}

func (_m *PagerDutyCaller) EXPECT() *PagerDutyCaller_Expecter {
	return &PagerDutyCaller_Expecter{mock: &_m.Mock}
}

// NotifyV1 provides a mock function with given fields: ctx, message
func (_m *PagerDutyCaller) NotifyV1(ctx context.Context, message pagerduty.MessageV1) error {
	ret := _m.Called(ctx, message)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, pagerduty.MessageV1) error); ok {
		r0 = rf(ctx, message)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// PagerDutyCaller_NotifyV1_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'NotifyV1'
type PagerDutyCaller_NotifyV1_Call struct {
	*mock.Call
}

// NotifyV1 is a helper method to define mock.On call
//  - ctx context.Context
//  - message pagerduty.MessageV1
func (_e *PagerDutyCaller_Expecter) NotifyV1(ctx interface{}, message interface{}) *PagerDutyCaller_NotifyV1_Call {
	return &PagerDutyCaller_NotifyV1_Call{Call: _e.mock.On("NotifyV1", ctx, message)}
}

func (_c *PagerDutyCaller_NotifyV1_Call) Run(run func(ctx context.Context, message pagerduty.MessageV1)) *PagerDutyCaller_NotifyV1_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(pagerduty.MessageV1))
	})
	return _c
}

func (_c *PagerDutyCaller_NotifyV1_Call) Return(_a0 error) *PagerDutyCaller_NotifyV1_Call {
	_c.Call.Return(_a0)
	return _c
}

type mockConstructorTestingTNewPagerDutyCaller interface {
	mock.TestingT
	Cleanup(func())
}

// NewPagerDutyCaller creates a new instance of PagerDutyCaller. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPagerDutyCaller(t mockConstructorTestingTNewPagerDutyCaller) *PagerDutyCaller {
	mock := &PagerDutyCaller{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
