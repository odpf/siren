// Code generated by mockery 2.9.0. DO NOT EDIT.

package receiver

import mock "github.com/stretchr/testify/mock"

// MockReceiverRepository is an autogenerated mock type for the ReceiverRepository type
type MockReceiverRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *MockReceiverRepository) Create(_a0 *Receiver) (*Receiver, error) {
	ret := _m.Called(_a0)

	var r0 *Receiver
	if rf, ok := ret.Get(0).(func(*Receiver) *Receiver); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Receiver)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*Receiver) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Delete provides a mock function with given fields: _a0
func (_m *MockReceiverRepository) Delete(_a0 uint64) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(uint64) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Get provides a mock function with given fields: _a0
func (_m *MockReceiverRepository) Get(_a0 uint64) (*Receiver, error) {
	ret := _m.Called(_a0)

	var r0 *Receiver
	if rf, ok := ret.Get(0).(func(uint64) *Receiver); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Receiver)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint64) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// List provides a mock function with given fields:
func (_m *MockReceiverRepository) List() ([]*Receiver, error) {
	ret := _m.Called()

	var r0 []*Receiver
	if rf, ok := ret.Get(0).(func() []*Receiver); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*Receiver)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Migrate provides a mock function with given fields:
func (_m *MockReceiverRepository) Migrate() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: _a0
func (_m *MockReceiverRepository) Update(_a0 *Receiver) (*Receiver, error) {
	ret := _m.Called(_a0)

	var r0 *Receiver
	if rf, ok := ret.Get(0).(func(*Receiver) *Receiver); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*Receiver)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*Receiver) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
