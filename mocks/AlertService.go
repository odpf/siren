// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	domain "github.com/odpf/siren/domain"
	mock "github.com/stretchr/testify/mock"
)

// AlertService is an autogenerated mock type for the AlertService type
type AlertService struct {
	mock.Mock
}

// Create provides a mock function with given fields: _a0
func (_m *AlertService) Create(_a0 *domain.Alerts) ([]domain.Alert, error) {
	ret := _m.Called(_a0)

	var r0 []domain.Alert
	if rf, ok := ret.Get(0).(func(*domain.Alerts) []domain.Alert); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Alert)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*domain.Alerts) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: _a0, _a1, _a2, _a3
func (_m *AlertService) Get(_a0 string, _a1 uint64, _a2 uint64, _a3 uint64) ([]domain.Alert, error) {
	ret := _m.Called(_a0, _a1, _a2, _a3)

	var r0 []domain.Alert
	if rf, ok := ret.Get(0).(func(string, uint64, uint64, uint64) []domain.Alert); ok {
		r0 = rf(_a0, _a1, _a2, _a3)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]domain.Alert)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, uint64, uint64, uint64) error); ok {
		r1 = rf(_a0, _a1, _a2, _a3)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Migrate provides a mock function with given fields:
func (_m *AlertService) Migrate() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
