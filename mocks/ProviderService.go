// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	"github.com/odpf/siren/domain"
	mock "github.com/stretchr/testify/mock"
)

// ProviderService is an autogenerated mock type for the ProviderService type
type ProviderService struct {
	mock.Mock
}

// CreateProvider provides a mock function with given fields: _a0
func (_m *ProviderService) CreateProvider(_a0 *domain.Provider) (*domain.Provider, error) {
	ret := _m.Called(_a0)

	var r0 *domain.Provider
	if rf, ok := ret.Get(0).(func(*domain.Provider) *domain.Provider); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Provider)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*domain.Provider) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteProvider provides a mock function with given fields: _a0
func (_m *ProviderService) DeleteProvider(_a0 uint64) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(uint64) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetProvider provides a mock function with given fields: _a0
func (_m *ProviderService) GetProvider(_a0 uint64) (*domain.Provider, error) {
	ret := _m.Called(_a0)

	var r0 *domain.Provider
	if rf, ok := ret.Get(0).(func(uint64) *domain.Provider); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Provider)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint64) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// ListProviders provides a mock function with given fields:
func (_m *ProviderService) ListProviders() ([]*domain.Provider, error) {
	ret := _m.Called()

	var r0 []*domain.Provider
	if rf, ok := ret.Get(0).(func() []*domain.Provider); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*domain.Provider)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Migrate provides a mock function with given fields:
func (_m *ProviderService) Migrate() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateProvider provides a mock function with given fields: _a0
func (_m *ProviderService) UpdateProvider(_a0 *domain.Provider) (*domain.Provider, error) {
	ret := _m.Called(_a0)

	var r0 *domain.Provider
	if rf, ok := ret.Get(0).(func(*domain.Provider) *domain.Provider); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*domain.Provider)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*domain.Provider) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
