// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	receiver "github.com/odpf/siren/core/receiver"
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// SecureServiceProxy is an autogenerated mock type for the SecureServiceProxy type
type SecureServiceProxy struct {
	mock.Mock
}

type SecureServiceProxy_Expecter struct {
	mock *mock.Mock
}

func (_m *SecureServiceProxy) EXPECT() *SecureServiceProxy_Expecter {
	return &SecureServiceProxy_Expecter{mock: &_m.Mock}
}

// CreateReceiver provides a mock function with given fields: _a0
func (_m *SecureServiceProxy) CreateReceiver(_a0 *receiver.Receiver) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*receiver.Receiver) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SecureServiceProxy_CreateReceiver_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'CreateReceiver'
type SecureServiceProxy_CreateReceiver_Call struct {
	*mock.Call
}

// CreateReceiver is a helper method to define mock.On call
//  - _a0 *receiver.Receiver
func (_e *SecureServiceProxy_Expecter) CreateReceiver(_a0 interface{}) *SecureServiceProxy_CreateReceiver_Call {
	return &SecureServiceProxy_CreateReceiver_Call{Call: _e.mock.On("CreateReceiver", _a0)}
}

func (_c *SecureServiceProxy_CreateReceiver_Call) Run(run func(_a0 *receiver.Receiver)) *SecureServiceProxy_CreateReceiver_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*receiver.Receiver))
	})
	return _c
}

func (_c *SecureServiceProxy_CreateReceiver_Call) Return(_a0 error) *SecureServiceProxy_CreateReceiver_Call {
	_c.Call.Return(_a0)
	return _c
}

// DeleteReceiver provides a mock function with given fields: _a0
func (_m *SecureServiceProxy) DeleteReceiver(_a0 uint64) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(uint64) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SecureServiceProxy_DeleteReceiver_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'DeleteReceiver'
type SecureServiceProxy_DeleteReceiver_Call struct {
	*mock.Call
}

// DeleteReceiver is a helper method to define mock.On call
//  - _a0 uint64
func (_e *SecureServiceProxy_Expecter) DeleteReceiver(_a0 interface{}) *SecureServiceProxy_DeleteReceiver_Call {
	return &SecureServiceProxy_DeleteReceiver_Call{Call: _e.mock.On("DeleteReceiver", _a0)}
}

func (_c *SecureServiceProxy_DeleteReceiver_Call) Run(run func(_a0 uint64)) *SecureServiceProxy_DeleteReceiver_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *SecureServiceProxy_DeleteReceiver_Call) Return(_a0 error) *SecureServiceProxy_DeleteReceiver_Call {
	_c.Call.Return(_a0)
	return _c
}

// GetReceiver provides a mock function with given fields: _a0
func (_m *SecureServiceProxy) GetReceiver(_a0 uint64) (*receiver.Receiver, error) {
	ret := _m.Called(_a0)

	var r0 *receiver.Receiver
	if rf, ok := ret.Get(0).(func(uint64) *receiver.Receiver); ok {
		r0 = rf(_a0)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*receiver.Receiver)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(uint64) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SecureServiceProxy_GetReceiver_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetReceiver'
type SecureServiceProxy_GetReceiver_Call struct {
	*mock.Call
}

// GetReceiver is a helper method to define mock.On call
//  - _a0 uint64
func (_e *SecureServiceProxy_Expecter) GetReceiver(_a0 interface{}) *SecureServiceProxy_GetReceiver_Call {
	return &SecureServiceProxy_GetReceiver_Call{Call: _e.mock.On("GetReceiver", _a0)}
}

func (_c *SecureServiceProxy_GetReceiver_Call) Run(run func(_a0 uint64)) *SecureServiceProxy_GetReceiver_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(uint64))
	})
	return _c
}

func (_c *SecureServiceProxy_GetReceiver_Call) Return(_a0 *receiver.Receiver, _a1 error) *SecureServiceProxy_GetReceiver_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

// ListReceivers provides a mock function with given fields:
func (_m *SecureServiceProxy) ListReceivers() ([]*receiver.Receiver, error) {
	ret := _m.Called()

	var r0 []*receiver.Receiver
	if rf, ok := ret.Get(0).(func() []*receiver.Receiver); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*receiver.Receiver)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SecureServiceProxy_ListReceivers_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'ListReceivers'
type SecureServiceProxy_ListReceivers_Call struct {
	*mock.Call
}

// ListReceivers is a helper method to define mock.On call
func (_e *SecureServiceProxy_Expecter) ListReceivers() *SecureServiceProxy_ListReceivers_Call {
	return &SecureServiceProxy_ListReceivers_Call{Call: _e.mock.On("ListReceivers")}
}

func (_c *SecureServiceProxy_ListReceivers_Call) Run(run func()) *SecureServiceProxy_ListReceivers_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *SecureServiceProxy_ListReceivers_Call) Return(_a0 []*receiver.Receiver, _a1 error) *SecureServiceProxy_ListReceivers_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

// Migrate provides a mock function with given fields:
func (_m *SecureServiceProxy) Migrate() error {
	ret := _m.Called()

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SecureServiceProxy_Migrate_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Migrate'
type SecureServiceProxy_Migrate_Call struct {
	*mock.Call
}

// Migrate is a helper method to define mock.On call
func (_e *SecureServiceProxy_Expecter) Migrate() *SecureServiceProxy_Migrate_Call {
	return &SecureServiceProxy_Migrate_Call{Call: _e.mock.On("Migrate")}
}

func (_c *SecureServiceProxy_Migrate_Call) Run(run func()) *SecureServiceProxy_Migrate_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run()
	})
	return _c
}

func (_c *SecureServiceProxy_Migrate_Call) Return(_a0 error) *SecureServiceProxy_Migrate_Call {
	_c.Call.Return(_a0)
	return _c
}

// UpdateReceiver provides a mock function with given fields: _a0
func (_m *SecureServiceProxy) UpdateReceiver(_a0 *receiver.Receiver) error {
	ret := _m.Called(_a0)

	var r0 error
	if rf, ok := ret.Get(0).(func(*receiver.Receiver) error); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SecureServiceProxy_UpdateReceiver_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'UpdateReceiver'
type SecureServiceProxy_UpdateReceiver_Call struct {
	*mock.Call
}

// UpdateReceiver is a helper method to define mock.On call
//  - _a0 *receiver.Receiver
func (_e *SecureServiceProxy_Expecter) UpdateReceiver(_a0 interface{}) *SecureServiceProxy_UpdateReceiver_Call {
	return &SecureServiceProxy_UpdateReceiver_Call{Call: _e.mock.On("UpdateReceiver", _a0)}
}

func (_c *SecureServiceProxy_UpdateReceiver_Call) Run(run func(_a0 *receiver.Receiver)) *SecureServiceProxy_UpdateReceiver_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(*receiver.Receiver))
	})
	return _c
}

func (_c *SecureServiceProxy_UpdateReceiver_Call) Return(_a0 error) *SecureServiceProxy_UpdateReceiver_Call {
	_c.Call.Return(_a0)
	return _c
}

// NewSecureServiceProxy creates a new instance of SecureServiceProxy. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewSecureServiceProxy(t testing.TB) *SecureServiceProxy {
	mock := &SecureServiceProxy{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
