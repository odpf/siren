// Code generated by mockery v2.12.2. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	testing "testing"
)

// EncryptorDecryptor is an autogenerated mock type for the EncryptorDecryptor type
type EncryptorDecryptor struct {
	mock.Mock
}

type EncryptorDecryptor_Expecter struct {
	mock *mock.Mock
}

func (_m *EncryptorDecryptor) EXPECT() *EncryptorDecryptor_Expecter {
	return &EncryptorDecryptor_Expecter{mock: &_m.Mock}
}

// Decrypt provides a mock function with given fields: _a0
func (_m *EncryptorDecryptor) Decrypt(_a0 string) (string, error) {
	ret := _m.Called(_a0)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// EncryptorDecryptor_Decrypt_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Decrypt'
type EncryptorDecryptor_Decrypt_Call struct {
	*mock.Call
}

// Decrypt is a helper method to define mock.On call
//  - _a0 string
func (_e *EncryptorDecryptor_Expecter) Decrypt(_a0 interface{}) *EncryptorDecryptor_Decrypt_Call {
	return &EncryptorDecryptor_Decrypt_Call{Call: _e.mock.On("Decrypt", _a0)}
}

func (_c *EncryptorDecryptor_Decrypt_Call) Run(run func(_a0 string)) *EncryptorDecryptor_Decrypt_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *EncryptorDecryptor_Decrypt_Call) Return(_a0 string, _a1 error) *EncryptorDecryptor_Decrypt_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

// Encrypt provides a mock function with given fields: _a0
func (_m *EncryptorDecryptor) Encrypt(_a0 string) (string, error) {
	ret := _m.Called(_a0)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// EncryptorDecryptor_Encrypt_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'Encrypt'
type EncryptorDecryptor_Encrypt_Call struct {
	*mock.Call
}

// Encrypt is a helper method to define mock.On call
//  - _a0 string
func (_e *EncryptorDecryptor_Expecter) Encrypt(_a0 interface{}) *EncryptorDecryptor_Encrypt_Call {
	return &EncryptorDecryptor_Encrypt_Call{Call: _e.mock.On("Encrypt", _a0)}
}

func (_c *EncryptorDecryptor_Encrypt_Call) Run(run func(_a0 string)) *EncryptorDecryptor_Encrypt_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(string))
	})
	return _c
}

func (_c *EncryptorDecryptor_Encrypt_Call) Return(_a0 string, _a1 error) *EncryptorDecryptor_Encrypt_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

// NewEncryptorDecryptor creates a new instance of EncryptorDecryptor. It also registers the testing.TB interface on the mock and a cleanup function to assert the mocks expectations.
func NewEncryptorDecryptor(t testing.TB) *EncryptorDecryptor {
	mock := &EncryptorDecryptor{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
